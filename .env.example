## Vite environment variables example for yonokomae

# Copy this file to one of the following depending on your need:
# - .env                # applied to all modes
# - .env.local          # local overrides (gitignored)
# - .env.development    # only for dev mode
# - .env.production     # only for prod build
#
# Notes:
# - Vite only exposes variables prefixed with VITE_ to the client.
# - After changing env files, restart the dev server.

###############################################
# API
###############################################

# Base URL for the backend API that serves battle reports and judgements.
# Examples:
# VITE_API_BASE_URL=http://localhost:3000/api
# VITE_API_BASE_URL=https://api.example.com
# Default when unset: "/api"
VITE_API_BASE_URL=/api

###############################################
# Judgement request collapsing and cache
###############################################

# There are NO env-based overrides for judgement collapsing/cache.
# Configuration is code-only and per-repository.
# Edit: src/yk/repo/core/judgement-config.ts

###############################################
# yk-now (News) configuration
###############################################

# Cache TTL (ms) for news reporter API responses. Parsed as number.
# Default (unset or invalid): 30000 (30s)
# VITE_NEWS_REPORT_CACHE_TTL_MS=30000

# Blending weight for API vs local file data (0..1).
# 0   => always local file
# 1   => always API (when available)
# Default: 0.5
# VITE_BATTLE_RANDOM_WEIGHT_API=0.5

###############################################
# Build-time base path (GitHub Pages, sub-path deploys)
###############################################

# When deploying under a subdirectory (e.g. https://user.github.io/yonokomae/)
# set this so assets resolve correctly. Include both leading and trailing slash.
# Used only at build time in vite.config.ts.
# VITE_BASE_PATH=/yonokomae/

###############################################
# Logging / Debug (Development)
###############################################

# Enable verbose judgement cache hit/miss logging.
# Allowed boolean values (case-insensitive): 1|true|yes|on / 0|false|no|off
# Default (when unset): disabled
VITE_LOG_JUDGEMENT_CACHE=off

# Enable judgement timing (groupCollapsed duration + duplicate invocation warnings).
# Same boolean value rules as above. Default: disabled
VITE_LOG_JUDGEMENT_TIMING=off

# Enable verbose historical battle report repository logs (start/done/error/final).
# Default: enabled in non-production, disabled in production unless overridden.
VITE_LOG_HISTORICAL_REPORTS=off

###############################################
# TitleContainer Debug Instrumentation (Development Only)
###############################################

# IMPORTANT: Do NOT commit these enabled in persistent .env* files for CI/production.
# They are intentionally left documented here so any accidental addition is obvious.
# Enable them ad-hoc inline when running commands, e.g.:
#   VITE_TITLE_DEBUG=1 pnpm run dev
#   VITE_TITLE_DEBUG=1 VITE_TITLE_DEBUG_MODE=verbose pnpm run dev
#   VITE_TITLE_DEBUG=1 VITE_TITLE_DEBUG_MODE=compact pnpm run dev
#
# RATIONALE:
# - When VITE_TITLE_DEBUG is unset (recommended default) all TitleContainer
#   debug/logging code branches are tree-shaken and removed from the production
#   bundle (constant folding + dead code elimination).
# - Setting VITE_TITLE_DEBUG to a truthy value includes lightweight diagnostic
#   code paths useful for investigating touch / pointer behavior on iOS / Android.
# - Compact mode emits a single aggregated line per selection lifecycle.
# - Verbose mode emits granular event-level traces.
#
# Accepted boolean values (case-insensitive) for VITE_TITLE_DEBUG:
#   1 | true | yes | on   => enabled
#   0 | false | no | off  => disabled
# Unset => disabled (preferred for normal dev & all prod builds)
#
# VITE_TITLE_DEBUG=0
# VITE_TITLE_DEBUG_MODE=compact   # or "verbose" (default when debug enabled: compact)
