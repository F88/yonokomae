import{a as s}from"./delay-utils-lugK4fzg.js";class n{baseUrl;token;constructor(t,e){this.baseUrl=t,this.token=e}async get(t,e){const a=await fetch(`${this.baseUrl}${t}`,{headers:this.token?{Authorization:`Bearer ${this.token}`}:void 0,signal:e});if(!a.ok)throw new Error(`HTTP ${a.status}`);return a.json()}}class o{api;delay;constructor(t,e){this.api=t,this.delay=e?.delay}async generateReport(t){return await s(this.delay,t?.signal),this.api.get("/battle/report",t?.signal)}}class l{api;delay;constructor(t,e){this.api=t,this.delay=e?.delay}async determineWinner(t,e){return await s(this.delay,e?.signal),this.api.get(`/battle/judgement?mode=${encodeURIComponent(t.mode.id)}`,e?.signal)}}export{o as ApiBattleReportRepository,n as ApiClient,l as ApiJudgementRepository};
