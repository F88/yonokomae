class i{baseUrl;token;constructor(t,e){this.baseUrl=t,this.token=e}async get(t,e){const r=await fetch(`${this.baseUrl}${t}`,{headers:this.token?{Authorization:`Bearer ${this.token}`}:void 0,signal:e});if(!r.ok)throw new Error(`HTTP ${r.status}`);return r.json()}}class o{api;constructor(t){this.api=t}async generateReport(t){return this.api.get("/battle/report",t?.signal)}}class n{api;constructor(t){this.api=t}async determineWinner(t,e){return this.api.get(`/battle/judgement?mode=${encodeURIComponent(t.mode.id)}`,e?.signal)}}export{o as ApiBattleReportRepository,i as ApiClient,n as ApiJudgementRepository};
