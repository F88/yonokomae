import{u}from"./index-CLCY-N5A.js";import{a as M}from"./delay-utils-lugK4fzg.js";class x{api;delay;cacheTtlMs;cache=null;chooseSource;chooseVariant;constructor(e,t){this.api=e,this.delay=t?.delay,this.cacheTtlMs=Math.max(0,t?.cacheTtlMs??3e4),this.chooseSource=t?.chooser??(()=>Math.random()<.2?"ipify":"weather"),this.chooseVariant=t?.variantChooser??(i=>{const a=Math.random(),o=Math.floor(a*i);return o>=0&&o<i?o:0})}async generateReport(e){await M(this.delay,e?.signal);const t=Date.now();if(this.cache&&this.cache.expiresAt>t)return this.cache.value;const i=this.chooseSource();try{const a=i==="ipify"?await this.generateFromIpify(e?.signal):await this.generateWeatherForecast(e?.signal);return this.maybeStoreCache(a),a}catch{const a=await this.api.get("/news/battle/report",e?.signal);return this.maybeStoreCache(a),a}}maybeStoreCache(e){this.cacheTtlMs!==0&&(this.cache={value:e,expiresAt:Date.now()+this.cacheTtlMs})}async generateFromIpify(e){const t=await fetch("https://api.ipify.org?format=json",{headers:{Accept:"application/json"},signal:e});if(!t.ok)throw new Error(`ipify HTTP ${t.status}`);const i=await t.json(),a=typeof i?.ip=="string"&&i.ip?i.ip:"0.0.0.0",o=a.replace(/[^\d]/g,""),r=o?parseInt(o.slice(-6),10):42,n=r%50+25,s=Math.floor(r/7)%50+25;return{id:u("battle"),title:`IPアドレス ${a}`,subtitle:"Generated from ipify.org",overview:"A network-sourced battle report generated from your current public IP.",scenario:"Signal intelligence gathered from ipify inspires a spontaneous skirmish.",provenance:[{label:"ipify - A Simple Public IP Address API",url:"https://ipify.org",note:"The public IP address used to generate this report."}],yono:{imageUrl:"/yonokomae/YONO-SYMBOL.png",title:"Yono - IP Signal",subtitle:"Live network signal",description:"インターネット便利ねー",power:n},komae:{imageUrl:"/yonokomae/KOMAE-SYMBOL.png",title:"Komae - IP Signal",subtitle:"Live network signal",description:"インターネット便利なー",power:s},status:"success"}}async generateWeatherForecast(e){const t=await this.fetchWeatherSnapshot(e),i=this.buildBattlesFromWeatherSnapshot(t),a=this.chooseVariant(i.length);return i[a]??i[0]}async fetchWeatherSnapshot(e){const t={latitude:[35.88445483617253,35.63497080831211],longitude:[139.6262162096776,139.5789225059554],daily:["temperature_2m_max","daylight_duration","sunshine_duration","rain_sum","wind_speed_10m_max"],timezone:"Asia/Tokyo",past_days:1,forecast_days:1},i="https://api.open-meteo.com/v1/forecast",a=new URLSearchParams({latitude:t.latitude.join(","),longitude:t.longitude.join(","),daily:t.daily.join(","),timezone:t.timezone,past_days:String(t.past_days),forecast_days:String(t.forecast_days)}),o=await fetch(`${i}?${a.toString()}`,{headers:{Accept:"application/json"},signal:e});if(!o.ok)throw new Error(`open-meteo HTTP ${o.status}`);const n=(await o.json())?.daily??{},s=(d,y)=>Array.isArray(d)&&d.length>0?d:y,l=s(n.temperature_2m_max,[20,20]).map(Number),c=s(n.wind_speed_10m_max,[5,5]).map(Number),h=s(n.sunshine_duration,[28800,28800]).map(Number),m=s(n.daylight_duration,[43200,43200]).map(Number),p=s(n.rain_sum,[0,0]).map(Number);return{tmax:l,windMax:c,sunshineSec:h,daylightSec:m,rainMm:p,meta:{lat:[...t.latitude],lon:[...t.longitude],tz:t.timezone}}}buildBattlesFromWeatherSnapshot(e){const[t,i]=[Math.round(e.tmax[0]??20),Math.round(e.tmax[1]??e.tmax[0]??20)],[a,o]=[Math.round(e.windMax[0]??5),Math.round(e.windMax[1]??e.windMax[0]??5)],[r,n]=[Math.round((e.sunshineSec[0]??28800)/3600),Math.round((e.sunshineSec[1]??e.sunshineSec[0]??28800)/3600)],[s,l]=[Math.round((e.daylightSec[0]??43200)/3600),Math.round((e.daylightSec[1]??e.daylightSec[0]??43200)/3600)],[c,h]=[Math.round(e.rainMm[0]??0),Math.round(e.rainMm[1]??e.rainMm[0]??0)],m=(g,w,$)=>Math.max(w,Math.min($,g)),p={id:u("battle"),title:`Weather Tokyo (Tmax ${t}°C, windmax ${o} m/s)`,subtitle:"Generated from open-meteo.com",overview:`Daily metrics: Yono Tmax ${t}°C, Komae wind ${o} m/s. Sunshine ${r}h/${n}h, Rain ${c}mm/${h}mm (TZ ${e.meta.tz}).`,scenario:`穏やかな日照(${s}h/${l}h)の下、熱気と突風が衝突する。`,provenance:[{label:"Open-Meteo - Free Weather API",url:"https://open-meteo.com",note:"Daily metrics used."}],yono:{imageUrl:"/yonokomae/YONO-SYMBOL.png",title:"Yono - Temperature Front",subtitle:"Warm front advance",description:`日照 ${r}h、降水 ${c}mm。熱が士気を押し上げる。`,power:m(30+t,25,90)},komae:{imageUrl:"/yonokomae/KOMAE-SYMBOL.png",title:"Komae - Wind Gust",subtitle:"Gusty tailwinds",description:`日照 ${n}h、降水 ${h}mm。風が戦況を揺さぶる。`,power:m(25+o*2,25,90)},status:"success"},d={id:u("battle"),title:`Weather Tokyo (Sunshine ${r}h/${n}h, Rain ${c}/${h}mm)`,subtitle:"Sunshine duel",overview:`日照が士気を照らす。降水が足取りを重くする。 Tmax ${t}°C / ${i}°C`,scenario:`長い日照(${s}h/${l}h)が優勢を分ける光の攻防。`,provenance:[{label:"Open-Meteo - Free Weather API",url:"https://open-meteo.com",note:"Daily sunshine/rain used."}],yono:{imageUrl:"/yonokomae/YONO-SYMBOL.png",title:"Yono - Solar Vanguard",subtitle:"Sun-boosted morale",description:`日照 ${r}h、降水 ${c}mm。陽光が背を押す。`,power:m(20+r*3-c,25,90)},komae:{imageUrl:"/yonokomae/KOMAE-SYMBOL.png",title:"Komae - Radiant Phalanx",subtitle:"Sunlit formation",description:`日照 ${n}h、降水 ${h}mm。光が隊列を固める。`,power:m(20+n*3-h,25,90)},status:"success"},y={id:u("battle"),title:`Weather Tokyo (Rain ${c}/${h}mm, wind ${a}/${o} m/s)`,subtitle:"Rainfall attrition",overview:`降りしきる雨が補給線を鈍らせる。日照 ${r}h/${n}h。`,scenario:"雨脚と風が兵站を削る持久戦。",provenance:[{label:"Open-Meteo - Free Weather API",url:"https://open-meteo.com",note:"Daily rain/wind used."}],yono:{imageUrl:"/yonokomae/YONO-SYMBOL.png",title:"Yono - Rain Guard",subtitle:"Soggy advance",description:`降水 ${c}mm、風 ${a} m/s。耐えの局面。`,power:m(80-c*2+Math.round(a/2),25,90)},komae:{imageUrl:"/yonokomae/KOMAE-SYMBOL.png",title:"Komae - Gale Brigade",subtitle:"Wind-hardened lines",description:`降水 ${h}mm、風 ${o} m/s。風の利を掴む。`,power:m(80-h*2+Math.round(o/2),25,90)},status:"success"};return[p,d,y]}}export{x as NewsReporterApiBattleReportRepository};
