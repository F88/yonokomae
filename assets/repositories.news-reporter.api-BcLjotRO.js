import{u as l}from"./index-CwsG7vh2.js";import{a as p}from"./delay-utils-lugK4fzg.js";class y{api;delay;cacheTtlMs;cache=null;chooseSource;chooseVariant;constructor(a,e){this.api=a,this.delay=e?.delay,this.cacheTtlMs=Math.max(0,e?.cacheTtlMs??3e4),this.chooseSource=e?.chooser??(()=>Math.random()<.2?"ipify":"weather"),this.chooseVariant=e?.variantChooser??(o=>{const t=Math.random(),i=Math.floor(t*o);return i>=0&&i<o?i:0})}async generateReport(a){await p(this.delay,a?.signal);const e=Date.now();if(this.cache&&this.cache.expiresAt>e)return this.cache.value;const o=this.chooseSource();try{const t=o==="ipify"?await this.generateFromIpify(a?.signal):await this.generateWeatherForecast(a?.signal);return this.maybeStoreCache(t),t}catch{const t=await this.api.get("/news/battle/report",a?.signal);return this.maybeStoreCache(t),t}}maybeStoreCache(a){this.cacheTtlMs!==0&&(this.cache={value:a,expiresAt:Date.now()+this.cacheTtlMs})}async generateFromIpify(a){const e=await fetch("https://api.ipify.org?format=json",{headers:{Accept:"application/json"},signal:a});if(!e.ok)throw new Error(`ipify HTTP ${e.status}`);const o=await e.json(),t=typeof o?.ip=="string"&&o.ip?o.ip:"0.0.0.0",i=t.replace(/[^\d]/g,""),r=i?parseInt(i.slice(-6),10):42,s=r%50+25,n=Math.floor(r/7)%50+25;return{id:l("battle"),title:`IPアドレス ${t}`,subtitle:"Generated from ipify.org",overview:"A network-sourced battle report generated from your current public IP.",scenario:"Signal intelligence gathered from ipify inspires a spontaneous skirmish.",provenance:[{label:"ipify - A Simple Public IP Address API",url:"https://ipify.org",note:"The public IP address used to generate this report."}],yono:{imageUrl:"/yonokomae/YONO-SYMBOL.png",title:"Yono - IP Signal",subtitle:"Live network signal",description:"インターネット便利ねー",power:s},komae:{imageUrl:"/yonokomae/KOMAE-SYMBOL.png",title:"Komae - IP Signal",subtitle:"Live network signal",description:"インターネット便利なー",power:n},status:"success"}}async generateWeatherForecast(a){const e=await this.fetchWeatherSnapshot(a),o=this.buildBattlesFromWeatherSnapshot(e),t=this.chooseVariant(o.length);return o[t]??o[0]}async fetchWeatherSnapshot(a){const e={latitude:[35.88445483617253,35.63497080831211],longitude:[139.6262162096776,139.5789225059554],daily:["temperature_2m_max","daylight_duration","sunshine_duration","rain_sum","wind_speed_10m_max"],timezone:"Asia/Tokyo",past_days:1,forecast_days:1},o="https://api.open-meteo.com/v1/forecast",t=new URLSearchParams({latitude:e.latitude.join(","),longitude:e.longitude.join(","),daily:e.daily.join(","),timezone:e.timezone,past_days:String(e.past_days),forecast_days:String(e.forecast_days)}),i=await fetch(`${o}?${t.toString()}`,{headers:{Accept:"application/json"},signal:a});if(!i.ok)throw new Error(`open-meteo HTTP ${i.status}`);const r=await i.json(),s=Array.isArray(r)&&r.length>0?r[0]:void 0,n=Array.isArray(r)&&r.length>1?r[1]:void 0,c=this.pivotDailyFirstTwo({daily:s?.daily}),h=this.pivotDailyFirstTwo({daily:n?.daily});return{yono:c[1],komae:h[1]}}buildBattlesFromWeatherSnapshot(a){const e=(t,i,r)=>Math.max(i,Math.min(r,t));return[{id:l("battle"),title:"最高気温",subtitle:"あついね",overview:"",scenario:"くまがややふちゅうにだって負けてない!!",provenance:[{label:"Open-Meteo - Free Weather API",url:"https://open-meteo.com",note:"Daily metrics used."}],yono:{imageUrl:"/yonokomae/YONO-SYMBOL.png",title:`${a.yono.temperature_2m_max}°C`,subtitle:"あついー",description:"",power:e(30+a.yono.temperature_2m_max,25,90)},komae:{imageUrl:"/yonokomae/KOMAE-SYMBOL.png",title:`${a.komae.temperature_2m_max}°C`,subtitle:"あついー",description:"",power:e(25+a.komae.wind_speed_10m_max*2,25,90)},status:"success"}]}pivotDailyFirstTwo(a){const e=a.daily??{},o=s=>{const n=Number(s);return Number.isFinite(n)?n:0},t=(s,n)=>Array.isArray(s)?s[n]:void 0,i=s=>({time:String(t(e.time,s)??""),temperature_2m_max:o(t(e.temperature_2m_max,s)),daylight_duration:o(t(e.daylight_duration,s)),sunshine_duration:o(t(e.sunshine_duration,s)),rain_sum:o(t(e.rain_sum,s)),wind_speed_10m_max:o(t(e.wind_speed_10m_max,s))}),r=[];return r.push(i(0)),r.push(i(1)),r}}export{y as NewsReporterApiBattleReportRepository};
